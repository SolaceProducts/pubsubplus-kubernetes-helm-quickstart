# Create the StatefulSet needed for redundancy
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "solace.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "solace.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "solace.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ template "solace.fullname" . }}-discovery
  replicas: {{- if .Values.solace.redundancy }} 3 {{- else }} 1 {{- end }}
  podManagementPolicy: Parallel
  updateStrategy: 
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "solace.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{- if .Values.solace.podModifierEnabled }}
      annotations:
        pod-modifier.solace.com/modify: "true"
        pod-modifier.solace.com/modify.podDefinition: |
          {"Pods":[{"metadata":{"name":"{{ template "solace.fullname" . }}-2"},"spec":{"containers": [{"name": "pubsubplus","resources": {"requests": {"cpu": "1","memory": "1965Mi"},"limits": {"cpu": "1","memory": "1965Mi"} }} ] } } ]}
{{- end}}
    spec:
      enableServiceLinks: {{ .Values.enableServiceLinks}}
{{- if .Values.solace.affinity }}
      affinity:
{{ toYaml .Values.solace.affinity | indent 8 }}
{{- end }}
{{- if .Values.solace.tolerations }}
      tolerations:
{{ toYaml .Values.solace.tolerations | indent 6 }}
{{- end }}
      imagePullSecrets:
{{- if .Values.image.pullSecretName }}
      - name: {{ .Values.image.pullSecretName}}
{{- end}}
{{- if and (.Values.insights.enabled) (.Values.insights.image.pullSecretName) }}
      - name: {{ .Values.insights.image.pullSecretName}}
{{- end}}
{{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup | int64 }}
      {{- if and (.Values.securityContext.runAsUser) }}
        runAsUser: {{ .Values.securityContext.runAsUser | int64 }}
      {{- end }}
{{- end }}
      serviceAccountName: {{ template "solace.serviceAccountName" . }}
      terminationGracePeriodSeconds: 1200
      containers:
      - name: pubsubplus
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
        resources:
          requests:
{{- if .Values.solace.systemScaling }}
            cpu: {{ required "A valid cpu parameter required!" .Values.solace.systemScaling.cpu | quote }}
            memory: {{ required "A valid memory parameter required!" .Values.solace.systemScaling.memory }}
{{- else if eq .Values.solace.size "dev" }}
            cpu: "1"
            memory: 3410Mi
{{- else if eq .Values.solace.size "prod1k" }}
            cpu: "2"
            memory: 6515Mi
{{- else if eq .Values.solace.size "prod10k" }}
            cpu: "4"
            memory: 12435Mi
{{- else if eq .Values.solace.size "prod100k" }}
            cpu: "8"
            memory: 30925Mi
{{- else if eq .Values.solace.size "prod200k" }}
            cpu: "12"
            memory: 52581Mi
{{- else }}
          {{- fail "Invalid solace.size" }}
{{- end }}
          limits:
{{- if .Values.solace.systemScaling }}
            cpu: {{ .Values.solace.systemScaling.cpu | quote }}
            memory: {{ .Values.solace.systemScaling.memory }}
{{- else if eq .Values.solace.size "dev" }}
            cpu: "2"
            memory: 3410Mi
{{- else if eq .Values.solace.size "prod1k" }}
            cpu: "2"
            memory: 6515Mi
{{- else if eq .Values.solace.size "prod10k" }}
            cpu: "4"
            memory: 12435Mi
{{- else if eq .Values.solace.size "prod100k" }}
            cpu: "8"
            memory: 30925Mi
{{- else if eq .Values.solace.size "prod200k" }}
            cpu: "12"
            memory: 52581Mi
{{- end }}
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 300
          timeoutSeconds: 5
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 5
          exec:
            command:
            - /mnt/disks/solace/readiness_check.sh
        securityContext:
          privileged: false
{{- if semverCompare "<9.4" (default "9.4" (regexFind "\\d+\\.\\d+" .Values.image.tag)) }}
          # need capabilities opened up if PubSub+ version is lower than 9.4
          capabilities:
            add:
              - IPC_LOCK
              - SYS_NICE
{{- end }}
        env:
        - name: STATEFULSET_NAME
          value: {{ template "solace.fullname" . }}
        - name: STATEFULSET_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TZ
          value: {{ printf "%s/%s" ":/usr/share/zoneinfo" (default "UTC" .Values.solace.timezone) }}
        - name: UMASK
          value: "0022"
{{- if .Values.solace.extraEnvVars }}
      {{- range $item := .Values.solace.extraEnvVars }}
        - name: {{ $item.name }}
          value: {{ $item.value | quote }}
      {{- end }}
{{- end }}
{{- if or .Values.solace.extraEnvVarsCM .Values.solace.extraEnvVarsSecret }}
        envFrom:
          {{- if .Values.solace.extraEnvVarsCM }}
          - configMapRef:
              name: {{ tpl .Values.solace.extraEnvVarsCM . | quote }}
          {{- end }}
          {{- if .Values.solace.extraEnvVarsSecret }}
          - secretRef:
              name: {{ tpl .Values.solace.extraEnvVarsSecret . | quote }}
          {{- end }}
{{- end }}
        command:
          - bash
          - "-ec"
          - |
            source /mnt/disks/solace/init.sh
            # not using postinstall hooks because of order dependencies
            # launch config check - readiness check script will be launched by readinessProbe
            nohup /mnt/disks/solace/startup-broker.sh &
            /usr/sbin/boot.sh
        lifecycle:
          preStop:
            exec:
              command:
                - bash
                - "-ec"
                - |
                  while ! pgrep solacedaemon ; do sleep 1; done
                  killall solacedaemon; 
                  while [ ! -d /usr/sw/var/db.upgrade ]; do sleep 1; done;
        ports:
          {{- range $item := .Values.service.ports }}
          - containerPort: {{ $item.containerPort }}
            protocol: {{ $item.protocol }}
          {{- end}}
        volumeMounts:
        - name: podinfo
          mountPath: /etc/podinfo        
        - name: config-map
          mountPath: /mnt/disks/solace
        - name: admin-secrets
          mountPath: /mnt/disks/secrets/admin/
          readOnly: true
        {{- if ( .Values.insights.enabled) }}
        - name: insights-secrets
          mountPath: /mnt/disks/secrets/insights/
          readOnly: true
          {{- end }}
{{- if and (.Values.tls) (.Values.tls.enabled) }}
        - name: server-certs
          mountPath: /mnt/disks/certs/server
          readOnly: true
{{- end }}
        - name: dshm
          mountPath: /dev/shm
{{- if and (.Values.storage) (.Values.storage.useStorageGroup) }}
        # use single mount point storage-group
        - name: data
          mountPath: /var/lib/solace
        {{- if ( .Values.storage.slow) }}
        # mount ephemeral when using slow storage
        - name: soft-adb-ephemeral
          mountPath: /var/lib/solace/spool-cache
        {{- end }}
{{- else }}
        # use legacy multiple storage elements
        - name: data
          mountPath: /usr/sw/jail
          subPath: jail
        - name: data
          mountPath: /usr/sw/var
          subPath: var
        - name: data
          mountPath: /usr/sw/internalSpool
          subPath: internalSpool
        - name: data
          mountPath: /usr/sw/adb
          subPath: adb
        - name: data
          mountPath: /var/lib/solace/diags
          subPath: diags
        {{- if (not .Values.storage.slow) }}
        - name: data
          mountPath: /usr/sw/internalSpool/softAdb
          subPath: softAdb
        {{- else }}
        # mount ephemeral when using slow storage
        - name: soft-adb-ephemeral
          mountPath: /usr/sw/internalSpool/softAdb
        {{- end }}
{{- end }}
{{- if ( .Values.insights.enabled) }}
      - name: insights-agent
        image: {{ .Values.insights.image.repository }}:{{ .Values.insights.image.tag }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: {{ .Values.insights.resources.requests.memory }}
            cpu: {{ .Values.insights.resources.requests.cpu }}
          limits:
            memory: {{ .Values.insights.resources.limits.memory }}
            cpu: {{ .Values.insights.resources.limits.cpu }}
        env:
        - name: INSIGHTS_AGENT_BROKER_HOSTNAME_OVERRIDE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: INSIGHTS_AGENT_NODE_ROLE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
        envFrom:
          - secretRef:
              name: {{ template "solace.fullname" . }}-insights-agent-env-secrets
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        volumeMounts:
          - name: data
            mountPath: /jail
            subPath: jail
            readOnly: true
          - name: data
            mountPath: /opt/datadog-agent/run
            subPath: opt/datadog-agent/run
{{- end }}
      volumes:
        - name: podinfo
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
        - name: config-map
          configMap:
            name: {{ template "solace.fullname" . }}
            defaultMode: 0755
        - name: admin-secrets
          secret:
            secretName: {{ template "solace.fullname" . }}-secrets
            defaultMode: 0400
        {{- if .Values.insights.enabled }}
        - name: insights-secrets
          secret:
            secretName: {{ template "solace.fullname" . }}-insights-secrets
            defaultMode: 0400
{{- end }}
{{- if and (.Values.tls) (.Values.tls.enabled) }}
        - name: server-certs
          secret:
            secretName: {{ required "A secret containing the server key and certificates is required when TLS in enabled" .Values.tls.serverCertificatesSecret }}
            defaultMode: 0400
{{- end }}
        - name: dshm
          emptyDir:
            medium: Memory
{{- if .Values.storage.slow }}
        - name: soft-adb-ephemeral
          emptyDir: {}
{{- end }}
{{- if and (.Values.storage) (not .Values.storage.persistent) }}
        - name: data
          emptyDir: {}
{{- else if and (.Values.storage) (.Values.storage.customVolumeMount) }}
        - name: data
          {{- with .Values.storage.customVolumeMount }}
{{ tpl . $ | indent 10 }}
          {{- end }}
{{- else }}
  # This is the default way to acquire volume for the data mount
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
  {{- if .Values.storage.useStorageClass }}
      storageClassName: {{ .Values.storage.useStorageClass }}
  {{- end}}
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.storage.size}}
{{- end }}
