language: ruby
sudo: required
services:
- docker
before_install:
- echo "Installing test gems"
- gem install yaml-lint
- export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
- echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee
  -a /etc/apt/sources.list.d/google-cloud-sdk.list
- curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
- sudo apt-get update
- sudo apt-get install -y dpkg
- sudo apt-get install google-cloud-sdk
- curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.10.5/bin/linux/amd64/kubectl;
  chmod +x ./kubectl; sudo mv ./kubectl /usr/bin/
- sudo apt-get install jq
- echo $GCP_KEY_FILE | base64 -d > ./keyfile
- gcloud auth activate-service-account -q $(jq -r .client_email keyfile) --key-file=./keyfile
  --project  $(jq -r .project_id keyfile)
- rm ./keyfile
- export DESIRED_VERSION=v2.14.3; curl -sSL https://raw.githubusercontent.com/helm/helm/master/scripts/get
  | bash
install: true
script:
- pwd
- yaml-lint -n pubsubplus/*.yaml
- echo "Testing GKE deployment, cloud provider Google Cloud Platform (gcp) "
- mkdir gke_test; pushd gke_test
- export TESTCLUSTERNAME="sol-gke-travistest-$(date +%s)"
- wget https://raw.githubusercontent.com/SolaceProducts/solace-gke-quickstart/master/scripts/create_cluster.sh
- chmod 755 create_cluster.sh
- "./create_cluster.sh -z us-east4-a,us-east4-b,us-east4-c -c $TESTCLUSTERNAME -m
  n1-standard-1"
- kubectl get statefulset,svc,pods,pvc,pv
- export SOLACE_KUBERNETES_QUICKSTART_REPO="$TRAVIS_REPO_SLUG"; export SOLACE_KUBERNETES_QUICKSTART_BRANCH="$TRAVIS_BRANCH"
- gcloud container clusters get-credentials $TESTCLUSTERNAME --zone us-east4-a --project
  capable-stream-180018
- popd
- kubectl -n kube-system create serviceaccount tiller
- kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
- helm init --service-account=tiller; kubectl rollout status -w deployment/tiller-deploy
  -n kube-system
- helm lint pubsubplus
- helm install --set solace.size=dev,solace.redundancy=true,solace.usernameAdminPassword=admin
  --name my-release pubsubplus
- kubectl get statefulset,svc,pods,pvc,pv --show-labels
- echo "Waiting for cluster to become active"
- travis_wait 30 sleep 1800 &
- sleep 40; kubectl describe nodes
- until kubectl get pods --show-labels | grep pubsubplus-0 | grep -m 1 -E '1/1'; do sleep
  10; done
- until kubectl get pods --show-labels | grep pubsubplus-1 | grep -m 1 -E '1/1'; do sleep
  10; done
- until kubectl get pods --show-labels | grep pubsubplus-2 | grep -m 1 -E '1/1'; do sleep
  10; done
- until kubectl get pods --show-labels | grep pubsubplus- | grep -m 1 -E 'active=true';
  do sleep 10; done
- kubectl get statefulset,svc,pods,pvc,pv --show-labels
- bash -c 'if [[ `kubectl get po --show-labels | grep -c "1/1"` -ne 3 ]]; then echo
  "Some pods are not ready!"; kubectl get po --show-labels; exit 1; fi'
- export url="$(kubectl get statefulset,svc,pods,pvc,pv --show-labels | grep LoadBalancer
  | awk '{print $4}')"; echo $url
- curl -O https://sftp.solace.com/download/SDKPERF_C_LINUX64
- tar -xvf SDKPERF_C_LINUX64
- pubSubTools/sdkperf_c -cip=$url -mn=100000 -mr=0 -ptl=t1 -stl=t1 | grep "Total Messages"
- sleep 30
- bash -c 'if [[ -z `curl -sS -u admin:admin http://$url:8080/SEMP -d "<rpc><show><config-sync></config-sync></show></rpc>"
  | grep "<oper-status>Up</oper-status>"` ]] ; then echo "config-sync not up!"; exit
  1; fi'
- curl -sS -u admin:admin http://$url:8080/SEMP -d "<rpc><show><redundancy></redundancy></show></rpc>"
- curl -sS -u admin:admin http://$url:8080/SEMP -d "<rpc><show><config-sync></config-sync></show></rpc>"
- helm list
- helm delete $(helm list | grep DEPLOYED | awk '{print $1}')
- kubectl delete pvc --all
after_success:
- echo "Test Success - Branch($TRAVIS_BRANCH) Pull Request($TRAVIS_PULL_REQUEST) Tag($TRAVIS_TAG)"
- echo "YAML linted"
- echo "GKE cluster deployment tested"
- echo "Messaging tested"
after_script:
- gcloud container clusters delete $TESTCLUSTERNAME --quiet --zone us-east4-a
- gcloud compute disks list | grep travis | sed 1d $rpt | while read -r a b c; do
  gcloud compute disks delete $a --zone $b --quiet; done
env:
  global:
    secure: WeZxznL2ZRjeM8QWxblgkyVALUe0wjk7qWSNrst8GNA963g3fsnOTHIgtrfBUnCrVfkDqHBLFtmpImFrEHHStMXCZpVK4NFIf6gtu13xuU4yqiPVm29HUjH+E8IMBDF+BcfXEviIHu5NYEi3s9kzU7c5+8mGX1maE+5zu8kZ3ro7Wbbq3Ih7BWgBMFN4gJKt7Qpu1LrlNJV/4EropuUKCvxbcLbxYrGe2eSxRVj4NugFCm931jPaEJd7eZxAUy+4J3cZodj3rWAo32u7zkarFyDTJTdPrQBVB95ZQXVS+AO0kTIxBP599n13dEkSzQH1zRbZ4lCWS6LgBqMP8iIv2++mB9OrYlEqGSKYio6LAfRvZUke+ZlwOB6jM8pSbPVd5/pbPtLvUujiC2EVB/kEe1/ezrkYTqhKeeRSBrCH14zAwzxYNSB3WiePLSGCl11B97EJzuyquLT4zEV5QKd433qCp0ozBwC0HVZwTv9Unkd03gpGHErDTMURTpyO9MNlp8nUq/1EC/1RReOMP9xNJvBaUbP0GKMImTK7RZxDVroImKcz56H2atoAJXm8qNbXHI3DZQeI/dFMNCBudr520gOd/ymDK5MdZObhbBdgrHaVqqpN47N0QUXZ41aUmB2329OVcc3lJaVHGrXgMBGaPTs1UR6lj+1mKeSG/gQ/87A=
