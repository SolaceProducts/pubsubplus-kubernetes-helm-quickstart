{
    "$schema": "http://json-schema.org/schema#",
    "type": "object",
    "properties": {
        "fullnameOverride": {
            "type": "string"
        },
        "image": {
            "type": "object",
            "properties": {
                "pullPolicy": {
                    "type": "string"
                },
                "pullSecretName": {
                    "type": "string"
                },
                "repository": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "nameOverride": {
            "type": "string"
        },
        "securityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "fsGroup": {
                    "type": "integer"
                },
                "runAsUser": {
                    "type": "integer"
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "object"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "containerPort": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "protocol": {
                                "type": "string"
                            },
                            "servicePort": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean"
                }
            }
        },
        "solace": {
            "type": "object",
            "properties": {
                "extraEnvVars": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                },
                "extraEnvVarsCM": {
                    "type": "string"
                },
                "extraEnvVarsSecret": {
                    "type": "string"
                },
                "redundancy": {
                    "type": "boolean"
                },
                "podDisruptionBudgetForHA": {
                    "type": "boolean"
                },
                "size": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "usernameAdminPassword": {
                    "type": ["string", "null"]
                },
                "affinity": {
                    "$ref": "#/definitions/io.k8s.api.core.v1.Affinity",
                    "description": "If specified, the PubSubPlus+ STS scheduling constraints"
                },
                "tolerations": {
                    "description": "If specified, the PubSubPlus+ STS tolerations.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.Toleration",
                        "description": "If specified, the PubSubPlus+ STS tolerations."
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "annotations": {
                    "type": "object"
                },
                "topologySpreadConstraints": {
                    "description": "If specified, the PubSubPlus+ STS topology spread constraint.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint",
                        "description": "If specified, the PubSubPlus+ STS topology spread."
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "if": {
                "properties": {
                    "podDisruptionBudgetForHA": { "const": true }
                },
                "required": ["podDisruptionBudgetForHA"]
            },
            "then": { "required": ["redundancy"] }
        },
        "storage": {
            "type": "object",
            "properties": {
                "customVolumeMount": {
                    "type": "string"
                },
                "persistent": {
                    "type": "boolean"
                },
                "size": {
                    "type": "string"
                },
                "monitorStorageSize": {
                    "type": "string"
                },
                "slow": {
                    "type": "boolean"
                },
                "useStorageGroup": {
                    "type": "boolean"
                },
                "useStorageClass": {
                    "type": "string"
                }
            }
        },
        "tls": {
            "type": "object",
            "properties": {
                "certFilename": {
                    "type": "string"
                },
                "certKeyFilename": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "serverCertificatesSecret": {
                    "type": "string"
                }
            }
        }
    },
    "definitions": {
        "io.k8s.api.core.v1.Affinity": {
            "description": "Affinity is a group of affinity scheduling rules.",
            "properties": {
                "nodeAffinity": {
                    "description": "Node affinity is a group of node affinity scheduling rules.",
                    "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                            "items": {
                                "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                "properties": {
                                    "preference": {
                                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                        "properties": {
                                            "matchExpressions": {
                                                "description": "A list of node selector requirements by node's labels.",
                                                "items": {
                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "The label key that the selector applies to.",
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\nPossible enum values:\n - `\"DoesNotExist\"`\n - `\"Exists\"`\n - `\"Gt\"`\n - `\"In\"`\n - `\"Lt\"`\n - `\"NotIn\"`",
                                                            "enum": [
                                                                "DoesNotExist",
                                                                "Exists",
                                                                "Gt",
                                                                "In",
                                                                "Lt",
                                                                "NotIn"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "matchFields": {
                                                "description": "A list of node selector requirements by node's fields.",
                                                "items": {
                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "The label key that the selector applies to.",
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\nPossible enum values:\n - `\"DoesNotExist\"`\n - `\"Exists\"`\n - `\"Gt\"`\n - `\"In\"`\n - `\"Lt\"`\n - `\"NotIn\"`",
                                                            "enum": [
                                                                "DoesNotExist",
                                                                "Exists",
                                                                "Gt",
                                                                "In",
                                                                "Lt",
                                                                "NotIn"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            }
                                        },
                                        "type": "object",
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                    },
                                    "weight": {
                                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "weight",
                                    "preference"
                                ],
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "additionalProperties": false
                            },
                            "type": [
                                "array",
                                "null"
                            ]
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
                            "properties": {
                                "nodeSelectorTerms": {
                                    "description": "Required. A list of node selector terms. The terms are ORed.",
                                    "items": {
                                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                        "properties": {
                                            "matchExpressions": {
                                                "description": "A list of node selector requirements by node's labels.",
                                                "items": {
                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "The label key that the selector applies to.",
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\nPossible enum values:\n - `\"DoesNotExist\"`\n - `\"Exists\"`\n - `\"Gt\"`\n - `\"In\"`\n - `\"Lt\"`\n - `\"NotIn\"`",
                                                            "enum": [
                                                                "DoesNotExist",
                                                                "Exists",
                                                                "Gt",
                                                                "In",
                                                                "Lt",
                                                                "NotIn"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "matchFields": {
                                                "description": "A list of node selector requirements by node's fields.",
                                                "items": {
                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "The label key that the selector applies to.",
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\nPossible enum values:\n - `\"DoesNotExist\"`\n - `\"Exists\"`\n - `\"Gt\"`\n - `\"In\"`\n - `\"Lt\"`\n - `\"NotIn\"`",
                                                            "enum": [
                                                                "DoesNotExist",
                                                                "Exists",
                                                                "Gt",
                                                                "In",
                                                                "Lt",
                                                                "NotIn"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            }
                                        },
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "nodeSelectorTerms"
                            ],
                            "type": [
                                "object",
                                "null"
                            ],
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                        }
                    },
                    "type": [
                        "object",
                        "null"
                    ],
                    "additionalProperties": false
                },
                "podAffinity": {
                    "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
                    "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                            "items": {
                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                "properties": {
                                    "podAffinityTerm": {
                                        "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                        "properties": {
                                            "labelSelector": {
                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                "properties": {
                                                    "matchExpressions": {
                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                        "items": {
                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                            "properties": {
                                                                "key": {
                                                                    "description": "key is the label key that the selector applies to.",
                                                                    "type": "string",
                                                                    "x-kubernetes-patch-merge-key": "key",
                                                                    "x-kubernetes-patch-strategy": "merge"
                                                                },
                                                                "operator": {
                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                    "type": "string"
                                                                },
                                                                "values": {
                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                    "items": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "key",
                                                                "operator"
                                                            ],
                                                            "type": [
                                                                "object",
                                                                "null"
                                                            ],
                                                            "additionalProperties": false
                                                        },
                                                        "type": [
                                                            "array",
                                                            "null"
                                                        ]
                                                    },
                                                    "matchLabels": {
                                                        "additionalProperties": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ]
                                                    }
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ],
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                            },
                                            "namespaceSelector": {
                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                "properties": {
                                                    "matchExpressions": {
                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                        "items": {
                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                            "properties": {
                                                                "key": {
                                                                    "description": "key is the label key that the selector applies to.",
                                                                    "type": "string",
                                                                    "x-kubernetes-patch-merge-key": "key",
                                                                    "x-kubernetes-patch-strategy": "merge"
                                                                },
                                                                "operator": {
                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                    "type": "string"
                                                                },
                                                                "values": {
                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                    "items": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "key",
                                                                "operator"
                                                            ],
                                                            "type": [
                                                                "object",
                                                                "null"
                                                            ],
                                                            "additionalProperties": false
                                                        },
                                                        "type": [
                                                            "array",
                                                            "null"
                                                        ]
                                                    },
                                                    "matchLabels": {
                                                        "additionalProperties": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ]
                                                    }
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ],
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                            },
                                            "namespaces": {
                                                "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                "items": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "topologyKey": {
                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "topologyKey"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "weight": {
                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "weight",
                                    "podAffinityTerm"
                                ],
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "additionalProperties": false
                            },
                            "type": [
                                "array",
                                "null"
                            ]
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                            "items": {
                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                "properties": {
                                    "labelSelector": {
                                        "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                        "properties": {
                                            "matchExpressions": {
                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "key is the label key that the selector applies to.",
                                                            "type": "string",
                                                            "x-kubernetes-patch-merge-key": "key",
                                                            "x-kubernetes-patch-strategy": "merge"
                                                        },
                                                        "operator": {
                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "matchLabels": {
                                                "additionalProperties": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            }
                                        },
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                    },
                                    "namespaceSelector": {
                                        "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                        "properties": {
                                            "matchExpressions": {
                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "key is the label key that the selector applies to.",
                                                            "type": "string",
                                                            "x-kubernetes-patch-merge-key": "key",
                                                            "x-kubernetes-patch-strategy": "merge"
                                                        },
                                                        "operator": {
                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "matchLabels": {
                                                "additionalProperties": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            }
                                        },
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                    },
                                    "namespaces": {
                                        "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                        "items": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "type": [
                                            "array",
                                            "null"
                                        ]
                                    },
                                    "topologyKey": {
                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "topologyKey"
                                ],
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "additionalProperties": false
                            },
                            "type": [
                                "array",
                                "null"
                            ]
                        }
                    },
                    "type": [
                        "object",
                        "null"
                    ],
                    "additionalProperties": false
                },
                "podAntiAffinity": {
                    "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
                    "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                            "items": {
                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                "properties": {
                                    "podAffinityTerm": {
                                        "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                        "properties": {
                                            "labelSelector": {
                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                "properties": {
                                                    "matchExpressions": {
                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                        "items": {
                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                            "properties": {
                                                                "key": {
                                                                    "description": "key is the label key that the selector applies to.",
                                                                    "type": "string",
                                                                    "x-kubernetes-patch-merge-key": "key",
                                                                    "x-kubernetes-patch-strategy": "merge"
                                                                },
                                                                "operator": {
                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                    "type": "string"
                                                                },
                                                                "values": {
                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                    "items": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "key",
                                                                "operator"
                                                            ],
                                                            "type": [
                                                                "object",
                                                                "null"
                                                            ],
                                                            "additionalProperties": false
                                                        },
                                                        "type": [
                                                            "array",
                                                            "null"
                                                        ]
                                                    },
                                                    "matchLabels": {
                                                        "additionalProperties": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ]
                                                    }
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ],
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                            },
                                            "namespaceSelector": {
                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                "properties": {
                                                    "matchExpressions": {
                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                        "items": {
                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                            "properties": {
                                                                "key": {
                                                                    "description": "key is the label key that the selector applies to.",
                                                                    "type": "string",
                                                                    "x-kubernetes-patch-merge-key": "key",
                                                                    "x-kubernetes-patch-strategy": "merge"
                                                                },
                                                                "operator": {
                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                    "type": "string"
                                                                },
                                                                "values": {
                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                    "items": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "key",
                                                                "operator"
                                                            ],
                                                            "type": [
                                                                "object",
                                                                "null"
                                                            ],
                                                            "additionalProperties": false
                                                        },
                                                        "type": [
                                                            "array",
                                                            "null"
                                                        ]
                                                    },
                                                    "matchLabels": {
                                                        "additionalProperties": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                        "type": [
                                                            "object",
                                                            "null"
                                                        ]
                                                    }
                                                },
                                                "type": [
                                                    "object",
                                                    "null"
                                                ],
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                            },
                                            "namespaces": {
                                                "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                "items": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "topologyKey": {
                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "topologyKey"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "weight": {
                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "weight",
                                    "podAffinityTerm"
                                ],
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "additionalProperties": false
                            },
                            "type": [
                                "array",
                                "null"
                            ]
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                            "items": {
                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                "properties": {
                                    "labelSelector": {
                                        "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                        "properties": {
                                            "matchExpressions": {
                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "key is the label key that the selector applies to.",
                                                            "type": "string",
                                                            "x-kubernetes-patch-merge-key": "key",
                                                            "x-kubernetes-patch-strategy": "merge"
                                                        },
                                                        "operator": {
                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "matchLabels": {
                                                "additionalProperties": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            }
                                        },
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                    },
                                    "namespaceSelector": {
                                        "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                        "properties": {
                                            "matchExpressions": {
                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                    "properties": {
                                                        "key": {
                                                            "description": "key is the label key that the selector applies to.",
                                                            "type": "string",
                                                            "x-kubernetes-patch-merge-key": "key",
                                                            "x-kubernetes-patch-strategy": "merge"
                                                        },
                                                        "operator": {
                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                            "items": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "type": [
                                                                "array",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "key",
                                                        "operator"
                                                    ],
                                                    "type": [
                                                        "object",
                                                        "null"
                                                    ],
                                                    "additionalProperties": false
                                                },
                                                "type": [
                                                    "array",
                                                    "null"
                                                ]
                                            },
                                            "matchLabels": {
                                                "additionalProperties": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                "type": [
                                                    "object",
                                                    "null"
                                                ]
                                            }
                                        },
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                    },
                                    "namespaces": {
                                        "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                        "items": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "type": [
                                            "array",
                                            "null"
                                        ]
                                    },
                                    "topologyKey": {
                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "topologyKey"
                                ],
                                "type": [
                                    "object",
                                    "null"
                                ],
                                "additionalProperties": false
                            },
                            "type": [
                                "array",
                                "null"
                            ]
                        }
                    },
                    "type": [
                        "object",
                        "null"
                    ],
                    "additionalProperties": false
                }
            },
            "type": "object",
            "additionalProperties": false,
            "$schema": "http://json-schema.org/schema#"
        },
        "io.k8s.api.core.v1.Toleration": {
        "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
        "properties": {
          "effect": {
            "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n\nPossible enum values:\n - `\"NoExecute\"` Evict any already-running pods that do not tolerate the taint. Currently enforced by NodeController.\n - `\"NoSchedule\"` Do not allow new pods to schedule onto the node unless they tolerate the taint, but allow all pods submitted to Kubelet without going through the scheduler to start, and allow all already-running pods to continue running. Enforced by the scheduler.\n - `\"PreferNoSchedule\"` Like TaintEffectNoSchedule, but the scheduler tries not to schedule new pods onto the node, rather than prohibiting new pods from scheduling onto the node entirely. Enforced by the scheduler.",
            "enum": [
              "NoExecute",
              "NoSchedule",
              "PreferNoSchedule"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "key": {
            "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
            "type": [
              "string",
              "null"
            ]
          },
          "operator": {
            "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n\nPossible enum values:\n - `\"Equal\"`\n - `\"Exists\"`",
            "enum": [
              "Equal",
              "Exists"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "tolerationSeconds": {
            "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
            "format": "int64",
            "type": [
              "integer",
              "null"
            ]
          },
          "value": {
            "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
            "type": [
              "string",
              "null"
            ]
          }
        },
        "type": "object",
        "additionalProperties": false,
        "$schema": "http://json-schema.org/schema#"
      },
      "io.k8s.api.core.v1.TopologySpreadConstraint": {
        "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
        "properties": {
            "labelSelector": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                "properties": {
                    "matchExpressions": {
                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                        "items": {
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                            "properties": {
                                "key": {
                                    "description": "key is the label key that the selector applies to.",
                                    "type": "string",
                                    "x-kubernetes-patch-merge-key": "key",
                                    "x-kubernetes-patch-strategy": "merge"
                                },
                                "operator": {
                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                    "type": "string"
                                },
                                "values": {
                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                    "items": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "type": [
                                        "array",
                                        "null"
                                    ]
                                }
                            },
                            "required": [
                                "key",
                                "operator"
                            ],
                            "type": [
                                "object",
                                "null"
                            ],
                            "additionalProperties": false
                        },
                        "type": [
                            "array",
                            "null"
                        ]
                    },
                    "matchLabels": {
                        "additionalProperties": {
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                        "type": [
                            "object",
                            "null"
                        ]
                    }
                },
                "type": [
                    "object",
                    "null"
                ],
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
            },
            "maxSkew": {
            "description": "MaxSkew describes the degree to which pods may be unevenly distributed. It's the maximum permitted difference between the number of matching pods in any two topology domains of a given topology type. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. It's a required field. Default value is 1 and 0 is not allowed.",
            "format": "int32",
            "type": [
                "integer",
                "null"
            ]
            },
            "topologyKey": {
            "description": "TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a \"bucket\", and try to put balanced number of pods into each bucket. It's a required field.",
            "type": [
                "string",
                "null"
            ]
            },
            "whenUnsatisfiable": {
            "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it - ScheduleAnyway tells the scheduler to still schedule it It's considered as \"Unsatisfiable\" if and only if placing incoming pod on any topology violates \"MaxSkew\". For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.",
            "type": [
                "string",
                "null"
            ]
            }
        },
        "required": [
            "maxSkew",
            "topologyKey",
            "whenUnsatisfiable"
        ],
        "type": "object",
        "$schema": "http://json-schema.org/schema#"
      }
    }
}
